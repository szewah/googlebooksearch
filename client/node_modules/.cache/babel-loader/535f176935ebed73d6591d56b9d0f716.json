{"ast":null,"code":"var _jsxFileName = \"/Users/szewahleong/Desktop/Columbia Bootcamp/googlebooksearch/client/src/pages/Search.js\";\nimport React, { Component } from 'react';\nimport API from '../utils/API';\nimport Jumbotron from '../components/Jumbotron';\nimport Card from '../components/Card/Card';\nimport \"./style.css\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      books: [],\n      message: \"\",\n      error: \" \"\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      console.log(\"[DEBUG] query\", this.state.query);\n      API.getSearchBooks(this.state.query).then(res => {\n        const books = res.data.items.map(item => {\n          const book = {\n            key: item.id,\n            id: item.id,\n            title: item.volumeInfo.title,\n            author: item.volumeInfo.authors,\n            description: item.volumeInfo.description,\n            image: !!item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.thumbnail : \"https://place-hold.it/53x80\",\n            link: item.volumeInfo.infoLink\n          };\n          return book;\n        });\n        this.setState({\n          books: books,\n          error: \"\",\n          query: \"\"\n        });\n      }).catch(err => {\n        this.setState({\n          error: err.items\n        });\n      });\n    };\n\n    this.handleSavedButton = event => {\n      event.preventDefault();\n      let savedBooks = this.state.books.filter(book => book.id === event.target.id);\n      API.saveBook(savedBooks).then(this.setState({\n        message: alert(\"Your book is saved\")\n      })).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      handleInputChange: this.handleInputChange,\n      handleFormSubmit: this.handleFormSubmit,\n      q: this.state.query,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Card, {\n      books: this.state.books,\n      handleSavedButton: this.handleSavedButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/szewahleong/Desktop/Columbia Bootcamp/googlebooksearch/client/src/pages/Search.js"],"names":["React","Component","API","Jumbotron","Card","Search","state","query","books","message","error","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","console","log","getSearchBooks","then","res","data","items","map","item","book","key","id","title","volumeInfo","author","authors","description","image","imageLinks","thumbnail","link","infoLink","catch","err","handleSavedButton","savedBooks","filter","saveBook","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport API from '../utils/API';\nimport Jumbotron from '../components/Jumbotron';\nimport Card from '../components/Card/Card';\n\nimport \"./style.css\";\n\nclass Search extends Component {\n    state = {\n        query: \"\",\n        books: [],\n        message: \"\",\n        error: \" \"\n    };\n\n    handleInputChange = event => {\n        const {name, value} = event.target;\n        this.setState ({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        console.log(\"[DEBUG] query\", this.state.query);\n        API.getSearchBooks(this.state.query)\n        .then(res => {\n            const books = res.data.items.map(item => {\n                const book = {\n                    key: item.id,\n                    id: item.id,\n                    title: item.volumeInfo.title,\n                    author: item.volumeInfo.authors,\n                    description: item.volumeInfo.description,\n                    image: !!item.volumeInfo.imageLinks\n                    ? item.volumeInfo.imageLinks.thumbnail\n                    : \"https://place-hold.it/53x80\",\n                    link: item.volumeInfo.infoLink\n                };\n                return book;\n            });\n            this.setState({books: books, error: \"\", query: \"\"});\n        })\n        .catch(err => {\n            this.setState({error: err.items});\n        })\n    };\n\n    handleSavedButton = event => {\n        event.preventDefault();\n        let savedBooks = this.state.books.filter (\n            book => book.id === event.target.id\n        );\n        API.saveBook(savedBooks)\n        .then(this.setState({message: alert(\"Your book is saved\")}))\n        .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <div>\n                <Jumbotron\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                    q={this.state.query}\n                />\n\n                <Card\n                    books={this.state.books}\n                    handleSavedButton={this.handleSavedButton}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}